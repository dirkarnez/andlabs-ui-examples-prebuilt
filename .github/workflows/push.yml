name: golang-build-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*' # Push events to matching v*, i.e. v1.0, v20.15.10
      
permissions:
    contents: write
    
jobs:
  build:
    strategy:
      matrix:
        compiler:
        # - {
        #     name: "x86_64-8.1.0-release-posix-seh-rt_v6-rev0",
        #     url: "https://github.com/dirkarnez/cpp-tools/raw/main/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z"
        #   }
        - {
            name: "winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1",
            url: "https://github.com/brechtsanders/winlibs_mingw/releases/download/11.2.0-12.0.1-9.0.0-r1/winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1.zip"
          }
        # - {
        #     name: "msvc2019"
        #   }
        os: [ windows-latest ] # , ubuntu-latest, macos-latest]
        examples: 
        - controlgallery
        - drawtext
        - histogram
        - table
        - updateui
        
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'andlabs/ui'
          path: 'ui'
          
      - name: download compiler
        if: ${{  matrix.compiler.url }}
        shell: cmd
        run: |
          cd /d "%USERPROFILE%\Downloads" &&^
          curl ${{ matrix.compiler.url }} -L --output compiler &&^
          7z.exe x compiler
          
      # - name: Setup go
      #   uses: actions/setup-go@v2
      #   with:
      #     go-version: '1.23.0' # The Go version to download (if necessary) and use.
      - shell: cmd
        run: |
          cd /d "%USERPROFILE%\Downloads" &&^
          curl https://go.dev/dl/go1.23.0.windows-amd64.zip -L -O &&^
          7z.exe x go1.23.0.windows-amd64.zip
          
      - shell: cmd
        run: |
          cd /d "%USERPROFILE%\Downloads" &&^
          curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L -O &&^
          7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"
          
      - shell: cmd
        run: |
          set PATH=^
          %USERPROFILE%\Downloads\mingw64;^
          %USERPROFILE%\Downloads\mingw64\bin;^
          %USERPROFILE%\Downloads\go\bin;^
          %USERPROFILE%\Downloads\PortableGit-2.38.1-64-bit\usr\bin;
          set GOROOT=%USERPROFILE%\Downloads\go
          set GOPATH=%USERPROFILE%\Downloads\gopath
          go version &&^
          gcc --version &&^
          cd "ui\examples" &&^
          mkdir "${{ matrix.examples }}" &&^
          move /Y "${{ matrix.examples }}.go" "${{ matrix.examples }}" &&^
          cd "${{ matrix.examples }}" &&^
          sed -i "s/\/\/\s\++build\s\+OMIT//gi" "${{ matrix.examples }}.go" &&^
          go mod init "github.com/andlabs/${{ matrix.examples }}" &&^
          go get github.com/andlabs/ui &&^
          go build -ldflags="-H windowsgui" &&^
          dir
      
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "ui/examples"
          filename: "andlabs-ui-${{ matrix.examples }}-${{ github.ref_name }}-${{ matrix.os }}.zip"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "ui/examples/andlabs-ui-${{ matrix.examples }}-${{ github.ref_name }}-${{ matrix.os }}.zip"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
